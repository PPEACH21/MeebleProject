// src/pages/MenuStore.jsx
import axios from "@/api/axios";
import { useState, useEffect, useContext } from "react";
import { useParams, useLocation } from "react-router-dom";
import Swal from "sweetalert2";
import "sweetalert2/dist/sweetalert2.min.css";
import { AuthContext } from "@/context/ProtectRoute";
import { FaStar } from "react-icons/fa6";
import "@css/pages/MenuStore.css";

/* ----------------- helpers ----------------- */

// ‡∏´‡∏¢‡∏¥‡∏ö shopId ‡∏à‡∏≤‡∏Å‡∏≠‡πá‡∏≠‡∏ö‡πÄ‡∏à‡πá‡∏Å‡∏ï‡πå‡∏£‡πâ‡∏≤‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö
const getShopId = (shop) =>
  shop?.id || shop?.ID || shop?.shop_id || shop?.shopId || "";

// ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢: ‡∏î‡∏∂‡∏á lat/lng ‡∏à‡∏≤‡∏Å‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô
const pickLatLng = (s) => {
  const gp = s?.address || s?.geo || {};
  const lat = gp.latitude ?? gp.lat ?? s?.lat ?? 0;
  const lng = gp.longitude ?? gp.lng ?? s?.lng ?? 0;
  return { lat: Number(lat) || 0, lng: Number(lng) || 0 };
};

// ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠
const normalizeMenu = (x) => ({
  id: x.ID ?? x.id ?? x.docId ?? x.menuId ?? x.menu_id ?? "",
  name: x.Name ?? x.name ?? "",
  price: Number(x.Price ?? x.price ?? 0),
  description: x.Description ?? x.description ?? "",
  image: x.Image ?? x.image ?? "",
  active: (x.Active ?? x.active ?? true) === true,
});

/* ----------------- component ----------------- */

export default function MenuStore() {
  const { auth } = useContext(AuthContext);
  const location = useLocation();
  const { id: paramShopId } = useParams(); // /menu/:id

  // ‚úÖ ‡∏î‡∏∂‡∏á shopId: param ‚Üí state ‚Üí query ‚Üí localStorage
  const shopFromState = location.state?.shop || null;
  const stateShopId = location.state?.shopId || getShopId(shopFromState) || "";
  const queryShopId = new URLSearchParams(location.search).get("shopId") || "";
  const storageShopId =
    (typeof window !== "undefined" && localStorage.getItem("currentShopId")) ||
    "";
  const shopId = paramShopId || stateShopId || queryShopId || storageShopId;

  // ‚¨áÔ∏è ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ setShop ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ï‡∏¥‡∏°‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏†‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å DB
  const [shop, setShop] = useState(
    shopFromState ? { ...shopFromState, id: getShopId(shopFromState) } : null
  );

  const [menus, setMenus] = useState([]);
  const [lat, setLat] = useState(13.736717);
  const [lng, setLng] = useState(100.523186);
  const [loading, setLoading] = useState(true);
  const [err, setErr] = useState("");

  // ‡∏ï‡∏±‡πâ‡∏á‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏à‡∏≤‡∏Å state ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
  useEffect(() => {
    const gp = shopFromState?.address;
    if (gp?.latitude && gp?.longitude) {
      setLat(gp.latitude);
      setLng(gp.longitude);
    }
  }, [shopFromState]);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å shops/{shopId}/menu (‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ‡πÄ‡∏´‡πá‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞ active)
  const fetchMenusByShop = async (sid) => {
    if (!sid) {
      setErr("missing shopId");
      setLoading(false);
      return;
    }
    setLoading(true);
    try {
      const res = await axios.get(`/shops/${sid}/menu`, {
        withCredentials: true,
      });
      const raw = res.data?.menus ?? res.data ?? [];
      const normalized = (Array.isArray(raw) ? raw : []).map(normalizeMenu);
      setMenus(normalized.filter((m) => m.active));
      setErr("");
    } catch (e) {
      console.error("fetch menus error:", e?.response?.data || e);
      setErr("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡πÄ‡∏°‡∏ô‡∏π‡πÑ‡∏î‡πâ");
      setMenus([]);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    // ‡πÄ‡∏Å‡πá‡∏ö‡∏•‡∏á localStorage ‡πÄ‡∏ú‡∏∑‡πà‡∏≠ refresh/revisit
    if (shopId && typeof window !== "undefined") {
      localStorage.setItem("currentShopId", shopId);
    }
    fetchMenusByShop(shopId);
  }, [shopId]);

  // ‚¨áÔ∏è ‡πÄ‡∏ï‡∏¥‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡πâ‡∏≤‡∏ô‡∏à‡∏≤‡∏Å DB ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ /Shop ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ‡πÉ‡∏ô backend)
  useEffect(() => {
    const ensureShopMeta = async () => {
      try {
        if (!shopId) return;

        // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏î‡∏∂‡∏á
        if (shop?.shop_name) return;

        // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å /Shop (‡∏Ñ‡∏∑‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡πâ‡∏≤‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÉ‡∏ô collection "shops")
        const res = await axios.get("/Shop", { withCredentials: true });
        const list = Array.isArray(res.data) ? res.data : [];
        const found =
          list.find((s) => (s.id || s.ID) === shopId) ||
          list.find((s) => (s.shopId || s.shop_id) === shopId);

        if (found) {
          const { lat: la, lng: ln } = pickLatLng(found);
          setShop((prev) => ({
            ...(prev || {}),
            ...found,
            id: found.id || found.ID || shopId,
          }));
          if (la || ln) {
            setLat(la);
            setLng(ln);
          }
          // debug
          console.log("‚úÖ Loaded shop meta:", {
            id: found.id || found.ID || shopId,
            shop_name: found.shop_name || found.name,
          });
        } else {
          console.warn("‚ö†Ô∏è Shop not found in /Shop list for id:", shopId);
        }
      } catch (e) {
        console.error("ensureShopMeta error:", e?.response?.data || e);
      }
    };
    ensureShopMeta();
  }, [shopId, shop?.shop_name]);

  /* ----------------- add-to-cart (merge logic) ----------------- */

  const handleOrder = async (item) => {
    const { value: qty } = await Swal.fire({
      title: `‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô\n${item.name}`,
      input: "number",
      inputValue: 1,
      inputAttributes: { min: 1, step: 1 },
      confirmButtonText: "‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏™‡πà‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤",
      cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
      showCancelButton: true,
    });
    if (qty === null || qty === undefined) return;

    const qtyNum = Number(qty);
    if (!Number.isFinite(qtyNum) || qtyNum <= 0) {
      Swal.fire("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 1 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ", "error");
      return;
    }

    const menuIdRaw = item.id || item.ID || item.menuId || item.menu_id || "";
    const menuId = String(menuIdRaw);
    if (!menuId) {
      Swal.fire("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö", "‡πÄ‡∏°‡∏ô‡∏π‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ ID (menuId)", "error");
      return;
    }

    const customerId = auth?.user_id || "";
    if (!customerId) {
      Swal.fire("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô", "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏Å‡πà‡∏≠‡∏ô", "error");
      return;
    }

    const itemId = `${shopId}:${menuId}`;

    const payload = {
      customerId,
      userId: auth.user_id,
      shopId,
      // ‡∏™‡πà‡∏á‡∏ä‡∏∑‡πà‡∏≠‡∏£‡πâ‡∏≤‡∏ô‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‚Äî ‡∏ù‡∏±‡πà‡∏á BE ‡∏à‡∏∞‡∏≠‡πà‡∏≤‡∏ô‡∏à‡∏≤‡∏Å DB ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß
      shop_name: shop?.shop_name || shop?.name || "",
      qty: qtyNum,
      item: {
        id: itemId,
        menuId,
        shopId,
        name: item.name,
        price: Number(item.price) || 0,
        image: item.image || "",
        description: item.description || "",
      },
    };

    console.log("üõí Add to Cart Payload:", payload);

    try {
      const { data: currentCart = {} } = await axios.get("/api/cart", {
        params: { customerId },
        withCredentials: true,
      });

      console.log("üì¶ Current Cart Data:", currentCart);

      const found = (currentCart.items || []).find(
        (it) =>
          String(it.menuId ?? it.menu_id ?? "") === menuId &&
          String(it.shopId ?? it.ShopID ?? "") === String(shopId)
      );

      if (found) {
        const newQty = Number(found.qty || 0) + qtyNum;
        console.log(`üîÅ ‡∏û‡∏ö‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏î‡∏¥‡∏°‡πÉ‡∏ô‡∏£‡πâ‡∏≤‡∏ô‡∏ô‡∏µ‡πâ ‚Üí ‡∏£‡∏ß‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏õ‡πá‡∏ô ${newQty}`);
        await axios.patch(
          "/api/cart/qty",
          {
            shopId,
            customerId,
            menuId,
            qty: newQty,
          },
          { withCredentials: true }
        );
        console.log("‚úÖ PATCH /api/cart/qty ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      } else {
        console.log("‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤ (POST /api/cart/add)");
        await axios.post("/api/cart/add", payload, { withCredentials: true });
        console.log("‚úÖ POST /api/cart/add ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      }

      Swal.fire("‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÅ‡∏•‡πâ‡∏ß", "success");

      window.dispatchEvent(
        new CustomEvent("cart:updated", {
          detail: { shopId, menuId, delta: qtyNum },
        })
      );
      localStorage.setItem("cartUpdatedAt", String(Date.now()));
    } catch (e) {
      console.error("‚ùå Add to Cart Error:", e?.response?.data || e);
      const msg =
        e?.response?.data?.error ||
        e?.response?.data?.msg ||
        e?.message ||
        "‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏á‡∏ï‡∏∞‡∏Å‡∏£‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à";
      Swal.fire("‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", String(msg), "error");
    }
  };

  /* ----------------- render ----------------- */

  return (
    <div className="rowset">
      <div className="left">
        <div className="storeBox">
          <img
            src={
              shop?.image ||
              "https://i.pinimg.com/1200x/0d/08/60/0d0860d917320784369a58a1f01187d3.jpg"
            }
            alt="shop"
          />
          <div className="storeText">
            {/* ‚¨áÔ∏è ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏à‡∏∞‡∏î‡∏∂‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≤‡∏Å state ‡πÅ‡∏•‡∏∞‡∏à‡∏≤‡∏Å /Shop */}
            <h2 className="storeTitle">
              {shop?.shop_name || shop?.name || "Store"}
            </h2>
            <h3
              className="storeRate"
              style={{ display: "flex", alignItems: "center" }}
            >
              <FaStar size={20} /> {shop?.rate ?? "-"} / 5
            </h3>
            <h4 className="storeSubtitle">‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏£‡πâ‡∏≤‡∏ô</h4>
            <p className="storeDesc">
              {shop?.description || "No description available"}
            </p>
            <p style={{ marginTop: 6, color: "#64748b" }}>
              <b>Shop ID:</b> <code>{shopId || "‚Äî"}</code>
            </p>
          </div>
        </div>

        <div className="mapBox">
          <h1>Location</h1>
          <div className="miniMap">
            <iframe
              src={`https://www.google.com/maps?q=${lat},${lng}&z=17&output=embed`}
              allowFullScreen
              loading="lazy"
              title="mini-map"
            />
          </div>
          <button
            className="openMapBtn"
            onClick={() =>
              window.open(
                `https://www.google.com/maps?q=${lat},${lng}`,
                "_blank"
              )
            }
            style={btnPrimary}
          >
            Open in Map
          </button>
          {lat === 0 && lng === 0 && (
            <div style={{ color: "#b45309", marginTop: 8 }}>
              ‡∏û‡∏¥‡∏Å‡∏±‡∏î‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ (0,0) ‚Äî ‡πÇ‡∏õ‡∏£‡∏î‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏ú‡∏π‡πâ‡∏Ç‡∏≤‡∏¢
            </div>
          )}
        </div>
      </div>

      <div className="right">
        <div className="menuScroll">
          <div className="menu">
            {loading && <div style={{ padding: 12 }}>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏°‡∏ô‡∏π...</div>}
            {!loading && err && (
              <div style={{ color: "crimson", padding: 12 }}>{err}</div>
            )}
            {!loading && !err && menus.length === 0 && (
              <div style={{ padding: 12 }}>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏°‡∏ô‡∏π‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á</div>
            )}

            {!loading &&
              !err &&
              menus.map((item, index) => (
                <div
                  key={item.id || index}
                  className="menuBox"
                  style={{ margin: 10, padding: 10 }}
                >
                  <button
                    onClick={() => handleOrder(item)}
                    style={{ ...cardButton, textAlign: "left" }}
                  >
                    {item.image && (
                      <img
                        src={item.image}
                        alt={item.name || "menu"}
                        style={{
                          width: "100%",
                          maxWidth: 360,
                          borderRadius: 8,
                          marginBottom: 8,
                          objectFit: "cover",
                        }}
                      />
                    )}
                    <p>
                      <b>Name:</b> {item.name}
                    </p>
                    <p>
                      <b>Price:</b> {item.price} ‡∏ø
                    </p>
                    <p>
                      <b>Description:</b> {item.description}
                    </p>
                    <p style={{ opacity: 0.6, fontSize: 12 }}>
                      <b>Id:</b> {item.id || index}
                    </p>
                  </button>
                </div>
              ))}
          </div>
        </div>
      </div>
    </div>
  );
}

/* ----------------- inline styles ----------------- */
const cardButton = {
  width: "100%",
  background: "white",
  border: "1px solid #eee",
  borderRadius: 10,
  padding: 10,
  cursor: "pointer",
  boxShadow: "rgba(0,0,0,0.04) 0 2px 8px",
};

const btnPrimary = {
  background: "#ffa360",
  color: "#fff",
  border: "none",
  padding: "8px 12px",
  borderRadius: 8,
  cursor: "pointer",
};
